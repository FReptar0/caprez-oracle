CREATE TABLE CATEGORIAS(
    ID_CATEGORIA INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    NOMBRE_CATEGORIA VARCHAR(50) NOT NULL,
    ESTADO INT NOT NULL,
        PRIMARY KEY (ID_CATEGORIA)
);

CREATE TABLE OFERTAS (
    ID_OFERTA INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    NOMBRE_OFERTA VARCHAR(50) NOT NULL,
    DESCRIPCION_OFERTA VARCHAR(500) NOT NULL,
    FEC_INICIO DATE NOT NULL,
    FEC_FIN DATE,
    ID_CATEGORIA INT,
    ESTADO INT NOT NULL,
    IMAGEN BLOB,
        PRIMARY KEY (ID_OFERTA),
        CONSTRAINT FK_ID_OFERTA_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIAS(ID_CATEGORIA)
);

CREATE TABLE PRODUCTOS(
    ID_PRODUCTO INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    TITULO_PRODUCTO VARCHAR(100) NOT NULL,
    DESCRIPCION_PRODUCTO VARCHAR(200) NOT NULL,
    INFO_PRODUCTO VARCHAR(500) NOT NULL,
    PRECIO_MIN FLOAT NOT NULL,
    PRECIO_MAX FLOAT,
    ESTADO INT NOT NULL,
    STOCK INT NOT NULL,
    IMAGEN BLOB,
    ID_OFERTA INT,
    ID_CATEGORIA INT NOT NULL,
        PRIMARY KEY (ID_PRODUCTO),
        CONSTRAINT FK_ID_OFERTA FOREIGN KEY(ID_OFERTA) REFERENCES OFERTAS(ID_OFERTA),
        CONSTRAINT FK_ID_PRODUCTO_CATEGORIA FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIAS(ID_CATEGORIA)
);

CREATE TABLE ADMINISTRADORES(
    ID_ADMIN INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    USER_ADMIN VARCHAR(50) NOT NULL,
    PASS_ADMIN VARCHAR(50) NOT NULL,
    NOMBRE_ADMIN VARCHAR(50) NOT NULL,
    APELLIDO_ADMIN VARCHAR(50) NOT NULL,
    ROL_ADMIN INT NOT NULL,
    ESTADO INT NOT NULL,
    INTENTOS INT,
        PRIMARY KEY (ID_ADMIN)
);

CREATE TABLE IMAGENES(
    ID_IMAGEN INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    IMAGEN BLOB NOT NULL,
    ID_PRODUCTO INT NOT NULL,
        PRIMARY KEY (ID_IMAGEN),
        CONSTRAINT FK_ID_PRODUCTO FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO)
);

/* INSERTS DE PRUEBA */

INSERT INTO CATEGORIAS(NOMBRE_CATEGORIA, ESTADO)
VALUES('PRENDAS HOMBRE', 1);
INSERT INTO CATEGORIAS(NOMBRE_CATEGORIA, ESTADO)
VALUES('PRENDAS MUJER', 1);
INSERT INTO CATEGORIAS(NOMBRE_CATEGORIA, ESTADO)
VALUES('ACCESORIOS', 1);

INSERT INTO OFERTAS(NOMBRE_OFERTA, DESCRIPCION_OFERTA, FEC_INICIO, FEC_FIN, ID_CATEGORIA, ESTADO)
VALUES('DÍA NARANJA', '2X1 EN TODOS LOS ACCESORIOS DE MUJER', '20-01-2022', '25-01-2022', 1, 1);
INSERT INTO OFERTAS(NOMBRE_OFERTA, DESCRIPCION_OFERTA, FEC_INICIO, FEC_FIN, ID_CATEGORIA, ESTADO)
VALUES('DÍA AZUL', '2X1 EN TODOS LOS ACCESORIOS DE HOMBRE', '10-08-2022', '20-08-2022', 1, 1);
INSERT INTO OFERTAS(NOMBRE_OFERTA, DESCRIPCION_OFERTA, FEC_INICIO, FEC_FIN, ID_CATEGORIA, ESTADO)
VALUES('DÍA VERDE', '2X1 EN TODOS LOS ACCESORIOS', '01-12-2022', '31-12-2022', 1, 1);
INSERT INTO OFERTAS(NOMBRE_OFERTA, DESCRIPCION_OFERTA, FEC_INICIO, FEC_FIN, ID_CATEGORIA, ESTADO)
VALUES('DÍA VERDE', '2X1 EN TODOS LOS ACCESORIOS', '31-12-2022', '01-12-2022', 1, 1);

INSERT INTO PRODUCTOS(TITULO_PRODUCTO, DESCRIPCION_PRODUCTO, INFO_PRODUCTO, PRECIO_MIN, PRECIO_MAX, ESTADO, STOCK, ID_OFERTA, ID_CATEGORIA)
VALUES('PLAYERA BLANCA', 'PLAYERA BLANCA CON CUELLO TIPO POLO PARA CABALLERO', 'PLAYERA BLANCA CON CUELLO TIPO POLO Y PUES DEBO METER MÁS TEXTO PARA QUE SIMILAR LA COCHINA DESCRIPCIÓN LARGA', 100, NULL, 0, 150, NULL, 1);
INSERT INTO PRODUCTOS(TITULO_PRODUCTO, DESCRIPCION_PRODUCTO, INFO_PRODUCTO, PRECIO_MIN, PRECIO_MAX, ESTADO, STOCK, ID_OFERTA, ID_CATEGORIA)
VALUES('PLAYERA NEGRA', 'PLAYERA NEGRA CON CUELLO TIPO POLO PARA CABALLERO', 'PLAYERA NEGRA CON CUELLO TIPO POLO Y PUES DEBO METER MÁS TEXTO PARA QUE SIMILAR LA COCHINA DESCRIPCIÓN LARGA', 200, NULL, 1, 80, NULL, 1);
INSERT INTO PRODUCTOS(TITULO_PRODUCTO, DESCRIPCION_PRODUCTO, INFO_PRODUCTO, PRECIO_MIN, PRECIO_MAX, ESTADO, STOCK, ID_OFERTA, ID_CATEGORIA)
VALUES('BLUSA NARANJA', 'BLUSA NARANJA CON CUELLO TIPO POLO PARA DAMA', 'BLUSA NARANJA CON CUELLO TIPO POLO Y PUES DEBO METER MÁS TEXTO PARA QUE SIMILAR LA COCHINA DESCRIPCIÓN LARGA', 100, 500, 1, 50, 5, 2);

INSERT INTO ADMINISTRADORES(USER_ADMIN, PASS_ADMIN, NOMBRE_ADMIN, APELLIDO_ADMIN, ROL_ADMIN, ESTADO)
VALUES ('MIKE@GMAIL.COM','MIKE','MIKE','WAZASKI', 0, 1);
INSERT INTO ADMINISTRADORES(USER_ADMIN, PASS_ADMIN, NOMBRE_ADMIN, APELLIDO_ADMIN, ROL_ADMIN, ESTADO)
VALUES ('FREPTAR@GMAIL.COM','PASSMEMIJE','FERNANDO','MEMIJE', 0, 1);
INSERT INTO ADMINISTRADORES(USER_ADMIN, PASS_ADMIN, NOMBRE_ADMIN, APELLIDO_ADMIN, ROL_ADMIN, ESTADO)
VALUES ('ZESUA@GMAIL.COM','PASSXIMENA','XIMENA','ZEPEDA', 0, 1);
INSERT INTO ADMINISTRADORES(USER_ADMIN, PASS_ADMIN, NOMBRE_ADMIN, APELLIDO_ADMIN, ROL_ADMIN, ESTADO)
VALUES ('TLACUANO@GMAIL.COM','PASSEMILIO','JAIME','TLACUANO', 0, 1);
INSERT INTO ADMINISTRADORES(USER_ADMIN, PASS_ADMIN, NOMBRE_ADMIN, APELLIDO_ADMIN, ROL_ADMIN, ESTADO)
VALUES ('SMARIANNE@GMAIL.COM','PASSMARIANNE','MARIANNE','SANTOS', 0, 1);

CREATE OR REPLACE VIEW CONSULTA_PRODUCTOS AS SELECT
    PRODUCTOS.ID_PRODUCTO AS ID,
    PRODUCTOS.ID_OFERTA AS ID_OFERTA,
    PRODUCTOS.TITULO_PRODUCTO AS TITULO,
    PRODUCTOS.DESCRIPCION_PRODUCTO AS DESCRIPCION,
    PRODUCTOS.INFO_PRODUCTO AS INFO,
    PRODUCTOS.PRECIO_MIN AS PRECIO_MIN,
    PRODUCTOS.PRECIO_MAX AS PRECIO_MAX,
    PRODUCTOS.ESTADO AS ESTADO,
    PRODUCTOS.STOCK AS STOCK,
    CATEGORIAS.NOMBRE_CATEGORIA AS CATEGORIA,
    PRODUCTOS.IMAGEN AS IMAGEN
    FROM PRODUCTOS INNER JOIN CATEGORIAS ON CATEGORIAS.ID_CATEGORIA = PRODUCTOS.ID_CATEGORIA;
   
ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY HH24:MI';

CREATE OR REPLACE TRIGGER FECHAS BEFORE INSERT OR UPDATE ON OFERTAS
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.FEC_INICIO > :NEW.FEC_FIN THEN
            DBMS_OUTPUT.PUT_LINE('La fecha de inicio no puede ser mayor que la fecha de fin');
            :NEW.ESTADO := 0;
        ELSE
            :NEW.ESTADO := 1;
        END IF;
    END IF;
    IF UPDATING THEN
        IF :NEW.FEC_INICIO > :NEW.FEC_FIN THEN
            DBMS_OUTPUT.PUT_LINE('La fecha de inicio no puede ser mayor que la fecha de fin');
            :NEW.ESTADO := 0;
        ELSE
            :NEW.ESTADO := 1;
        END IF;
        IF :NEW.FEC_INICIO > :OLD.FEC_FIN THEN
            DBMS_OUTPUT.PUT_LINE('La fecha de inicio no puede ser mayor que la fecha de fin');
            :NEW.ESTADO := 0;
        ELSE
            :NEW.ESTADO := 1;
        END IF;
        IF :OLD.FEC_INICIO > :NEW.FEC_FIN THEN
            DBMS_OUTPUT.PUT_LINE('La fecha de inicio no puede ser mayor que la fecha de fin');
            :NEW.ESTADO := 0;
        ELSE
            :NEW.ESTADO := 1;
        END IF;
    END IF;
END;

CREATE OR REPLACE PROCEDURE PA_QUE_JALE_OFERTAS(IDCAT IN NUMBER, IDOFERTA IN NUMBER)
AS
BEGIN
    UPDATE PRODUCTOS SET ID_OFERTA = IDOFERTA WHERE ID_CATEGORIA = IDCAT;
END;